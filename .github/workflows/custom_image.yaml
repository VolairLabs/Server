name: Custom Image

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Name'
        required: true
        type: string



permissions:
  packages: write
  contents: write

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event }}
  cancel-in-progress: true
jobs:
  image:
    runs-on: self-hosted
    environment: Deploys


    steps:
      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: nschloe/action-cached-lfs-checkout@v1
        with:
          token: ${{ secrets.GH_PAT }} # Will change after public release
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Adding required env vars for caching Docker build
        uses: actions/github-script@v7
        env:
          github-token: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env['ACTIONS_CACHE_URL'])
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env['ACTIONS_RUNTIME_TOKEN'])
            core.exportVariable('ACTIONS_RUNTIME_URL', process.env['ACTIONS_RUNTIME_URL'])

      - name: Echo required env vars
        shell: bash
        run: |
          echo "ACTIONS_CACHE_URL: $ACTIONS_CACHE_URL"
          echo "ACTIONS_RUNTIME_TOKEN: $ACTIONS_RUNTIME_TOKEN"     
          echo "ACTIONS_RUNTIME_URL: $ACTIONS_RUNTIME_URL"        

      - name: Build and Publish Docker Images
        env:
          VERSION: ${{ inputs.name }}
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin      
          git fetch
          cd ..

          rm -r models
          mkdir models
          mv On-Prem/upsonic_on_prem/utils/ai/models models
          
          docker buildx build --platform linux/amd64,linux/arm64 -f On-Prem/Dockerfile --push -t ghcr.io/upsonic/on-prem:$VERSION \
          --cache-to type=gha,mode=max \
          --cache-from type=gha .
          
  