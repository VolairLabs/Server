name: After Push

on: [push]

permissions:
  contents: write
  packages: write

concurrency:
  group: ${{ github.workflow }}

jobs:
  select_type:
    if: contains('["onuratakan"]', github.actor)
    runs-on: ubuntu-latest
    outputs:
      release_type: ${{ steps.any_type.outputs.release_type }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: any_type
        id: any_type
        run: |
          commit_msg=$(git log --format=oneline -n 1 $GITHUB_SHA)
          
          if [[ $commit_msg == *"[PATCH]" ]]; then
            echo "release_type=patch" >> "$GITHUB_OUTPUT"
          elif [[ $commit_msg == *"[MINOR]" ]]; then
            echo "release_type=minor" >> "$GITHUB_OUTPUT"
          elif [[ $commit_msg == *"[MAJOR]" ]]; then
            echo "release_type=major" >> "$GITHUB_OUTPUT"
          else
            echo "Commit message does not end with [PATCH], [MINOR], or [MAJOR]"
          fi

  check:
    needs: select_type
    runs-on: ubuntu-latest
    steps:
      - name: Print Type
        env:
          release_type: ${{ needs.select_type.outputs.release_type }}
        run: echo "$release_type"

  tagext:
    needs: select_type
    runs-on: ubuntu-latest
    if: ${{ (needs.select_type.outputs.release_type == 'patch') || (needs.select_type.outputs.release_type == 'minor') || (needs.select_type.outputs.release_type == 'major')}}

    steps:
      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}  # Will change after public release
          fetch-depth: 0
        
      - name: Fetching Tags
        run: git fetch --tags

      - name: Setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Run Version Bump Script
        env:
          release_type: ${{ needs.select_type.outputs.release_type }}
        run: python bump.py $release_type

      - name: Sleep after tag extraction
        run: sleep 5

      - name: Getting Tag
        id: tag_extractor
        run: echo "latest_tag=$(git describe --tags --abbrev=0)" >> "$GITHUB_OUTPUT"

    outputs:
      tag: ${{ steps.tag_extractor.outputs.latest_tag }}

  check_2:
    if: success('tagext')
    needs: tagext
    runs-on: ubuntu-latest
    steps:
      - name: Print Tag
        env:
          release_type: ${{ needs.tagext.outputs.tag }}
        run: echo "$release_type"
